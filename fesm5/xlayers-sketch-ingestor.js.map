{"version":3,"file":"xlayers-sketch-ingestor.js","sources":["ng://@xlayers/sketch-ingestor/lib/sketch-ingestor.service.ts","ng://@xlayers/sketch-ingestor/lib/sketch-ingestor.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\nconst entryAsyncCheck = (entry: any): entry is { async: Function } => {\r\n  return !!entry && typeof entry === 'object' && 'async' in entry;\r\n};\r\n\r\nconst jszipLoadAsync = (jszip: any): jszip is { loadAsync: Function } => {\r\n  return !!jszip && typeof jszip === 'object' && 'loadAsync' in jszip;\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SketchIngestorService {\r\n  async process(file: File) {\r\n    const data = {\r\n      images: {},\r\n      pages: [],\r\n      previews: [],\r\n      document: {},\r\n      user: {},\r\n      meta: {}\r\n    } as any;\r\n\r\n    const files = await this.readZipEntries(file);\r\n\r\n    await Promise.all(\r\n      Object.entries(files).map(async ([relativePath, entry]) => {\r\n        if (relativePath === 'previews/preview.png') {\r\n          return this.addPreviewImage(data, relativePath, entry);\r\n        } else if (relativePath.startsWith('images/')) {\r\n          return this.addImage(data, relativePath, entry);\r\n        } else if (relativePath.startsWith('pages/')) {\r\n          return this.addPage(data, relativePath, entry);\r\n        } else {\r\n          const objectName = relativePath.replace('.json', '');\r\n          if (data.hasOwnProperty(objectName)) {\r\n            return this.addConfiguration(data, objectName, entry);\r\n          }\r\n        }\r\n        return Promise.resolve({});\r\n      })\r\n    );\r\n\r\n    return data;\r\n  }\r\n\r\n  private async readZipEntries(file: Blob) {\r\n    return new Promise<unknown[]>((resolve, reject) => {\r\n      const fileReader = new FileReader();\r\n\r\n      fileReader.onload = _event => {\r\n        try {\r\n          resolve(this.unzipSketchPackage(fileReader.result));\r\n        } catch (e) {\r\n          reject(e);\r\n        }\r\n      };\r\n\r\n      fileReader.onerror = e => {\r\n        reject(e);\r\n      };\r\n\r\n      try {\r\n        fileReader.readAsArrayBuffer(file);\r\n      } catch (e) {\r\n        reject(e);\r\n      }\r\n    });\r\n  }\r\n\r\n  private async unzipSketchPackage(data: string | ArrayBuffer) {\r\n    const jszip = window['JSZip']();\r\n\r\n    if (jszipLoadAsync(jszip)) {\r\n      const zipFileInstance = await jszip.loadAsync(data);\r\n\r\n      const files: unknown[] = [];\r\n      zipFileInstance.forEach((relativePath, zipEntry) => {\r\n        files[relativePath] = zipEntry;\r\n      });\r\n      return files;\r\n    } else {\r\n      throw new Error('JSzip not loaded');\r\n    }\r\n  }\r\n\r\n  private async addConfiguration(\r\n    data: SketchMSData,\r\n    relativePath: string,\r\n    entry: unknown\r\n  ) {\r\n    const content = await this.extractJson(relativePath, entry);\r\n    data[relativePath] = content;\r\n  }\r\n\r\n  private async addPage(\r\n    data: SketchMSData,\r\n    relativePath: string,\r\n    entry: unknown\r\n  ) {\r\n    try {\r\n      const content = await this.extractJson(relativePath, entry);\r\n      data.pages.push(content);\r\n    } catch (e) {\r\n      throw new Error(`Could not load page \"${relativePath}\"`);\r\n    }\r\n  }\r\n\r\n  private async addImage(\r\n    data: SketchMSData,\r\n    relativePath: string,\r\n    entry: unknown\r\n  ) {\r\n    const imageData = await this.extractBase64(relativePath, entry);\r\n    (data as any).images[relativePath] = imageData;\r\n  }\r\n\r\n  private async addPreviewImage(\r\n    data: SketchMSData,\r\n    relativePath: string,\r\n    entry: unknown\r\n  ) {\r\n    const imageData = await this.extractBase64(relativePath, entry);\r\n    data.previews.push(imageData);\r\n  }\r\n\r\n  private async extractJson(_relativePath: string, entry: unknown) {\r\n    if (entryAsyncCheck(entry)) {\r\n      const content = await entry.async('string');\r\n      return JSON.parse(content);\r\n    } else {\r\n      throw new Error('JSZip undefined async function');\r\n    }\r\n  }\r\n\r\n  private async extractBase64(relativePath: string, entry: unknown) {\r\n    if (entryAsyncCheck(entry)) {\r\n      return entry.async('base64');\r\n    } else {\r\n      throw new Error('JSZip undefined async function');\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\n\r\n@NgModule()\r\nexport class SketchIngestorModule {}\r\n"],"names":[],"mappings":"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"}
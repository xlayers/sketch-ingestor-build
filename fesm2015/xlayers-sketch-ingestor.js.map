{"version":3,"file":"xlayers-sketch-ingestor.js","sources":["ng://@xlayers/sketch-ingestor/lib/sketch-ingestor.service.ts","ng://@xlayers/sketch-ingestor/lib/sketch-ingestor.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\nconst entryAsyncCheck = (entry: any): entry is { async: Function } => {\r\n  return !!entry && typeof entry === 'object' && 'async' in entry;\r\n};\r\n\r\nconst jszipLoadAsync = (jszip: any): jszip is { loadAsync: Function } => {\r\n  return !!jszip && typeof jszip === 'object' && 'loadAsync' in jszip;\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SketchIngestorService {\r\n  async process(file: File) {\r\n    const data = {\r\n      images: {},\r\n      pages: [],\r\n      previews: [],\r\n      document: {},\r\n      user: {},\r\n      meta: {}\r\n    } as any;\r\n\r\n    const files = await this.readZipEntries(file);\r\n\r\n    await Promise.all(\r\n      Object.entries(files).map(async ([relativePath, entry]) => {\r\n        if (relativePath === 'previews/preview.png') {\r\n          return this.addPreviewImage(data, relativePath, entry);\r\n        } else if (relativePath.startsWith('images/')) {\r\n          return this.addImage(data, relativePath, entry);\r\n        } else if (relativePath.startsWith('pages/')) {\r\n          return this.addPage(data, relativePath, entry);\r\n        } else {\r\n          const objectName = relativePath.replace('.json', '');\r\n          if (data.hasOwnProperty(objectName)) {\r\n            return this.addConfiguration(data, objectName, entry);\r\n          }\r\n        }\r\n        return Promise.resolve({});\r\n      })\r\n    );\r\n\r\n    return data;\r\n  }\r\n\r\n  private async readZipEntries(file: Blob) {\r\n    return new Promise<unknown[]>((resolve, reject) => {\r\n      const fileReader = new FileReader();\r\n\r\n      fileReader.onload = _event => {\r\n        try {\r\n          resolve(this.unzipSketchPackage(fileReader.result));\r\n        } catch (e) {\r\n          reject(e);\r\n        }\r\n      };\r\n\r\n      fileReader.onerror = e => {\r\n        reject(e);\r\n      };\r\n\r\n      try {\r\n        fileReader.readAsArrayBuffer(file);\r\n      } catch (e) {\r\n        reject(e);\r\n      }\r\n    });\r\n  }\r\n\r\n  private async unzipSketchPackage(data: string | ArrayBuffer) {\r\n    const jszip = window['JSZip']();\r\n\r\n    if (jszipLoadAsync(jszip)) {\r\n      const zipFileInstance = await jszip.loadAsync(data);\r\n\r\n      const files: unknown[] = [];\r\n      zipFileInstance.forEach((relativePath, zipEntry) => {\r\n        files[relativePath] = zipEntry;\r\n      });\r\n      return files;\r\n    } else {\r\n      throw new Error('JSzip not loaded');\r\n    }\r\n  }\r\n\r\n  private async addConfiguration(\r\n    data: SketchMSData,\r\n    relativePath: string,\r\n    entry: unknown\r\n  ) {\r\n    const content = await this.extractJson(relativePath, entry);\r\n    data[relativePath] = content;\r\n  }\r\n\r\n  private async addPage(\r\n    data: SketchMSData,\r\n    relativePath: string,\r\n    entry: unknown\r\n  ) {\r\n    try {\r\n      const content = await this.extractJson(relativePath, entry);\r\n      data.pages.push(content);\r\n    } catch (e) {\r\n      throw new Error(`Could not load page \"${relativePath}\"`);\r\n    }\r\n  }\r\n\r\n  private async addImage(\r\n    data: SketchMSData,\r\n    relativePath: string,\r\n    entry: unknown\r\n  ) {\r\n    const imageData = await this.extractBase64(relativePath, entry);\r\n    (data as any).images[relativePath] = imageData;\r\n  }\r\n\r\n  private async addPreviewImage(\r\n    data: SketchMSData,\r\n    relativePath: string,\r\n    entry: unknown\r\n  ) {\r\n    const imageData = await this.extractBase64(relativePath, entry);\r\n    data.previews.push(imageData);\r\n  }\r\n\r\n  private async extractJson(_relativePath: string, entry: unknown) {\r\n    if (entryAsyncCheck(entry)) {\r\n      const content = await entry.async('string');\r\n      return JSON.parse(content);\r\n    } else {\r\n      throw new Error('JSZip undefined async function');\r\n    }\r\n  }\r\n\r\n  private async extractBase64(relativePath: string, entry: unknown) {\r\n    if (entryAsyncCheck(entry)) {\r\n      return entry.async('base64');\r\n    } else {\r\n      throw new Error('JSZip undefined async function');\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\n\r\n@NgModule()\r\nexport class SketchIngestorModule {}\r\n"],"names":[],"mappings":"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"}